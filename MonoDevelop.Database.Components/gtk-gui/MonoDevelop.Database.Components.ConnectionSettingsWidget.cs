// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Database.Components {
    
    public partial class ConnectionSettingsWidget {
        
        private Gtk.Table table;
        
        private Gtk.Button buttonTest;
        
        private Gtk.CheckButton checkIntegratedSecurity;
        
        private Gtk.Entry entryName;
        
        private Gtk.Entry entryServer;
        
        private Gtk.Entry entryUsername;
        
        private Gtk.Expander expander;
        
        private Gtk.Table tableAdvanced;
        
        private Gtk.CheckButton checkCustom;
        
        private Gtk.Label label10;
        
        private Gtk.Label label11;
        
        private Gtk.ScrolledWindow scrolledwindow;
        
        private Gtk.TextView textConnectionString;
        
        private Gtk.SpinButton spinMaxPoolSize;
        
        private Gtk.SpinButton spinMinPoolSize;
        
        private Gtk.Label GtkLabel5;
        
        private Gtk.HBox hbox2;
        
        private Gtk.SpinButton spinPort;
        
        private Gtk.CheckButton checkDefaultPort;
        
        private Gtk.HBox hboxDatabase;
        
        private Gtk.ComboBoxEntry comboDatabase;
        
        private Gtk.Button buttonRefresh;
        
        private Gtk.Button buttonOpen;
        
        private Gtk.HBox hboxPassword;
        
        private Gtk.Entry entryPassword;
        
        private Gtk.CheckButton checkSavePassword;
        
        private Gtk.Label labelDatabase;
        
        private Gtk.Label labelName;
        
        private Gtk.Label labelPassword;
        
        private Gtk.Label labelPort;
        
        private Gtk.Label labelServer;
        
        private Gtk.Label labelTest;
        
        private Gtk.Label labelUsername;
        
        private Gtk.VBox VBoxMain;
        
        private Gtk.Label labelMessage;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Database.Components.ConnectionSettingsWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Database.Components.ConnectionSettingsWidget";
            // Container child MonoDevelop.Database.Components.ConnectionSettingsWidget.Gtk.Container+ContainerChild
            this.table = new Gtk.Table(((uint)(10)), ((uint)(2)), false);
            this.table.Name = "table";
            this.table.RowSpacing = ((uint)(6));
            this.table.ColumnSpacing = ((uint)(6));
            this.table.BorderWidth = ((uint)(6));
            // Container child table.Gtk.Table+TableChild
            this.buttonTest = new Gtk.Button();
            this.buttonTest.CanFocus = true;
            this.buttonTest.Name = "buttonTest";
            this.buttonTest.UseUnderline = true;
            // Container child buttonTest.Gtk.Container+ContainerChild
            Gtk.Alignment w1 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w2 = new Gtk.HBox();
            w2.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w3 = new Gtk.Image();
            w3.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-apply", Gtk.IconSize.Menu, 16);
            w2.Add(w3);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w5 = new Gtk.Label();
            w5.LabelProp = AddinCatalog.GetString("Test");
            w5.UseUnderline = true;
            w2.Add(w5);
            w1.Add(w2);
            this.buttonTest.Add(w1);
            this.table.Add(this.buttonTest);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table[this.buttonTest]));
            w9.TopAttach = ((uint)(8));
            w9.BottomAttach = ((uint)(9));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.checkIntegratedSecurity = new Gtk.CheckButton();
            this.checkIntegratedSecurity.CanFocus = true;
            this.checkIntegratedSecurity.Name = "checkIntegratedSecurity";
            this.checkIntegratedSecurity.Label = AddinCatalog.GetString("Use Integrated security");
            this.checkIntegratedSecurity.Active = true;
            this.checkIntegratedSecurity.DrawIndicator = true;
            this.checkIntegratedSecurity.UseUnderline = true;
            this.table.Add(this.checkIntegratedSecurity);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table[this.checkIntegratedSecurity]));
            w10.TopAttach = ((uint)(5));
            w10.BottomAttach = ((uint)(6));
            w10.LeftAttach = ((uint)(1));
            w10.RightAttach = ((uint)(2));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.entryName = new Gtk.Entry();
            this.entryName.CanDefault = true;
            this.entryName.CanFocus = true;
            this.entryName.Name = "entryName";
            this.entryName.IsEditable = true;
            this.entryName.ActivatesDefault = true;
            this.entryName.InvisibleChar = '●';
            this.table.Add(this.entryName);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table[this.entryName]));
            w11.LeftAttach = ((uint)(1));
            w11.RightAttach = ((uint)(2));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.entryServer = new Gtk.Entry();
            this.entryServer.CanFocus = true;
            this.entryServer.Name = "entryServer";
            this.entryServer.IsEditable = true;
            this.entryServer.InvisibleChar = '●';
            this.table.Add(this.entryServer);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.table[this.entryServer]));
            w12.TopAttach = ((uint)(1));
            w12.BottomAttach = ((uint)(2));
            w12.LeftAttach = ((uint)(1));
            w12.RightAttach = ((uint)(2));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.entryUsername = new Gtk.Entry();
            this.entryUsername.CanFocus = true;
            this.entryUsername.Name = "entryUsername";
            this.entryUsername.IsEditable = true;
            this.entryUsername.InvisibleChar = '●';
            this.table.Add(this.entryUsername);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table[this.entryUsername]));
            w13.TopAttach = ((uint)(3));
            w13.BottomAttach = ((uint)(4));
            w13.LeftAttach = ((uint)(1));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.expander = new Gtk.Expander(null);
            this.expander.CanFocus = true;
            this.expander.Name = "expander";
            // Container child expander.Gtk.Container+ContainerChild
            this.tableAdvanced = new Gtk.Table(((uint)(4)), ((uint)(2)), false);
            this.tableAdvanced.Name = "tableAdvanced";
            this.tableAdvanced.RowSpacing = ((uint)(6));
            this.tableAdvanced.ColumnSpacing = ((uint)(6));
            this.tableAdvanced.BorderWidth = ((uint)(6));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.checkCustom = new Gtk.CheckButton();
            this.checkCustom.CanFocus = true;
            this.checkCustom.Name = "checkCustom";
            this.checkCustom.Label = AddinCatalog.GetString("Use custom connection string");
            this.checkCustom.DrawIndicator = true;
            this.checkCustom.UseUnderline = true;
            this.tableAdvanced.Add(this.checkCustom);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.checkCustom]));
            w14.TopAttach = ((uint)(2));
            w14.BottomAttach = ((uint)(3));
            w14.RightAttach = ((uint)(2));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.label10 = new Gtk.Label();
            this.label10.Name = "label10";
            this.label10.Xalign = 0F;
            this.label10.LabelProp = AddinCatalog.GetString("Min Pool Size:");
            this.tableAdvanced.Add(this.label10);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.label10]));
            w15.XOptions = ((Gtk.AttachOptions)(4));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.label11 = new Gtk.Label();
            this.label11.Name = "label11";
            this.label11.Xalign = 0F;
            this.label11.LabelProp = AddinCatalog.GetString("Max Pool Size:");
            this.tableAdvanced.Add(this.label11);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.label11]));
            w16.TopAttach = ((uint)(1));
            w16.BottomAttach = ((uint)(2));
            w16.XOptions = ((Gtk.AttachOptions)(4));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.scrolledwindow = new Gtk.ScrolledWindow();
            this.scrolledwindow.Sensitive = false;
            this.scrolledwindow.CanFocus = true;
            this.scrolledwindow.Name = "scrolledwindow";
            this.scrolledwindow.ShadowType = ((Gtk.ShadowType)(1));
            // Container child scrolledwindow.Gtk.Container+ContainerChild
            this.textConnectionString = new Gtk.TextView();
            this.textConnectionString.CanFocus = true;
            this.textConnectionString.Name = "textConnectionString";
            this.scrolledwindow.Add(this.textConnectionString);
            this.tableAdvanced.Add(this.scrolledwindow);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.scrolledwindow]));
            w18.TopAttach = ((uint)(3));
            w18.BottomAttach = ((uint)(4));
            w18.RightAttach = ((uint)(2));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.spinMaxPoolSize = new Gtk.SpinButton(1, 100, 1);
            this.spinMaxPoolSize.CanFocus = true;
            this.spinMaxPoolSize.Name = "spinMaxPoolSize";
            this.spinMaxPoolSize.Adjustment.PageIncrement = 10;
            this.spinMaxPoolSize.ClimbRate = 1;
            this.spinMaxPoolSize.Numeric = true;
            this.spinMaxPoolSize.Value = 5;
            this.tableAdvanced.Add(this.spinMaxPoolSize);
            Gtk.Table.TableChild w19 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.spinMaxPoolSize]));
            w19.TopAttach = ((uint)(1));
            w19.BottomAttach = ((uint)(2));
            w19.LeftAttach = ((uint)(1));
            w19.RightAttach = ((uint)(2));
            w19.XOptions = ((Gtk.AttachOptions)(4));
            w19.YOptions = ((Gtk.AttachOptions)(4));
            // Container child tableAdvanced.Gtk.Table+TableChild
            this.spinMinPoolSize = new Gtk.SpinButton(1, 100, 1);
            this.spinMinPoolSize.CanFocus = true;
            this.spinMinPoolSize.Name = "spinMinPoolSize";
            this.spinMinPoolSize.Adjustment.PageIncrement = 10;
            this.spinMinPoolSize.ClimbRate = 1;
            this.spinMinPoolSize.Numeric = true;
            this.spinMinPoolSize.Value = 1;
            this.tableAdvanced.Add(this.spinMinPoolSize);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(this.tableAdvanced[this.spinMinPoolSize]));
            w20.LeftAttach = ((uint)(1));
            w20.RightAttach = ((uint)(2));
            w20.XOptions = ((Gtk.AttachOptions)(4));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            this.expander.Add(this.tableAdvanced);
            this.GtkLabel5 = new Gtk.Label();
            this.GtkLabel5.Name = "GtkLabel5";
            this.GtkLabel5.LabelProp = AddinCatalog.GetString("Advanced");
            this.GtkLabel5.UseUnderline = true;
            this.expander.LabelWidget = this.GtkLabel5;
            this.table.Add(this.expander);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(this.table[this.expander]));
            w22.TopAttach = ((uint)(7));
            w22.BottomAttach = ((uint)(8));
            w22.RightAttach = ((uint)(2));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.spinPort = new Gtk.SpinButton(1, 65535, 1);
            this.spinPort.CanFocus = true;
            this.spinPort.Name = "spinPort";
            this.spinPort.Adjustment.PageIncrement = 10;
            this.spinPort.ClimbRate = 1;
            this.spinPort.Numeric = true;
            this.spinPort.Value = 1;
            this.hbox2.Add(this.spinPort);
            Gtk.Box.BoxChild w23 = ((Gtk.Box.BoxChild)(this.hbox2[this.spinPort]));
            w23.Position = 0;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkDefaultPort = new Gtk.CheckButton();
            this.checkDefaultPort.CanFocus = true;
            this.checkDefaultPort.Name = "checkDefaultPort";
            this.checkDefaultPort.Label = AddinCatalog.GetString("Use default port");
            this.checkDefaultPort.DrawIndicator = true;
            this.checkDefaultPort.UseUnderline = true;
            this.hbox2.Add(this.checkDefaultPort);
            Gtk.Box.BoxChild w24 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkDefaultPort]));
            w24.Position = 1;
            w24.Expand = false;
            w24.Fill = false;
            this.table.Add(this.hbox2);
            Gtk.Table.TableChild w25 = ((Gtk.Table.TableChild)(this.table[this.hbox2]));
            w25.TopAttach = ((uint)(2));
            w25.BottomAttach = ((uint)(3));
            w25.LeftAttach = ((uint)(1));
            w25.RightAttach = ((uint)(2));
            w25.XOptions = ((Gtk.AttachOptions)(4));
            w25.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.hboxDatabase = new Gtk.HBox();
            this.hboxDatabase.Name = "hboxDatabase";
            this.hboxDatabase.Spacing = 6;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.comboDatabase = Gtk.ComboBoxEntry.NewText();
            this.comboDatabase.Name = "comboDatabase";
            this.hboxDatabase.Add(this.comboDatabase);
            Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.comboDatabase]));
            w26.Position = 0;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.buttonRefresh = new Gtk.Button();
            this.buttonRefresh.CanFocus = true;
            this.buttonRefresh.Name = "buttonRefresh";
            this.buttonRefresh.UseStock = true;
            this.buttonRefresh.UseUnderline = true;
            this.buttonRefresh.Label = "gtk-refresh";
            this.hboxDatabase.Add(this.buttonRefresh);
            Gtk.Box.BoxChild w27 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonRefresh]));
            w27.Position = 1;
            w27.Expand = false;
            w27.Fill = false;
            // Container child hboxDatabase.Gtk.Box+BoxChild
            this.buttonOpen = new Gtk.Button();
            this.buttonOpen.CanFocus = true;
            this.buttonOpen.Name = "buttonOpen";
            this.buttonOpen.UseStock = true;
            this.buttonOpen.UseUnderline = true;
            this.buttonOpen.Label = "gtk-open";
            this.hboxDatabase.Add(this.buttonOpen);
            Gtk.Box.BoxChild w28 = ((Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonOpen]));
            w28.Position = 2;
            w28.Expand = false;
            w28.Fill = false;
            this.table.Add(this.hboxDatabase);
            Gtk.Table.TableChild w29 = ((Gtk.Table.TableChild)(this.table[this.hboxDatabase]));
            w29.TopAttach = ((uint)(6));
            w29.BottomAttach = ((uint)(7));
            w29.LeftAttach = ((uint)(1));
            w29.RightAttach = ((uint)(2));
            w29.XOptions = ((Gtk.AttachOptions)(4));
            w29.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.hboxPassword = new Gtk.HBox();
            this.hboxPassword.Name = "hboxPassword";
            this.hboxPassword.Spacing = 6;
            // Container child hboxPassword.Gtk.Box+BoxChild
            this.entryPassword = new Gtk.Entry();
            this.entryPassword.CanFocus = true;
            this.entryPassword.Name = "entryPassword";
            this.entryPassword.IsEditable = true;
            this.entryPassword.Visibility = false;
            this.entryPassword.InvisibleChar = '●';
            this.hboxPassword.Add(this.entryPassword);
            Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(this.hboxPassword[this.entryPassword]));
            w30.Position = 0;
            // Container child hboxPassword.Gtk.Box+BoxChild
            this.checkSavePassword = new Gtk.CheckButton();
            this.checkSavePassword.CanFocus = true;
            this.checkSavePassword.Name = "checkSavePassword";
            this.checkSavePassword.Label = AddinCatalog.GetString("Save Password");
            this.checkSavePassword.Active = true;
            this.checkSavePassword.DrawIndicator = true;
            this.checkSavePassword.UseUnderline = true;
            this.hboxPassword.Add(this.checkSavePassword);
            Gtk.Box.BoxChild w31 = ((Gtk.Box.BoxChild)(this.hboxPassword[this.checkSavePassword]));
            w31.Position = 1;
            w31.Expand = false;
            this.table.Add(this.hboxPassword);
            Gtk.Table.TableChild w32 = ((Gtk.Table.TableChild)(this.table[this.hboxPassword]));
            w32.TopAttach = ((uint)(4));
            w32.BottomAttach = ((uint)(5));
            w32.LeftAttach = ((uint)(1));
            w32.RightAttach = ((uint)(2));
            w32.XOptions = ((Gtk.AttachOptions)(4));
            w32.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelDatabase = new Gtk.Label();
            this.labelDatabase.Name = "labelDatabase";
            this.labelDatabase.Xalign = 0F;
            this.labelDatabase.LabelProp = AddinCatalog.GetString("Database:");
            this.table.Add(this.labelDatabase);
            Gtk.Table.TableChild w33 = ((Gtk.Table.TableChild)(this.table[this.labelDatabase]));
            w33.TopAttach = ((uint)(6));
            w33.BottomAttach = ((uint)(7));
            w33.XOptions = ((Gtk.AttachOptions)(4));
            w33.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelName = new Gtk.Label();
            this.labelName.Name = "labelName";
            this.labelName.Xalign = 0F;
            this.labelName.LabelProp = AddinCatalog.GetString("Name:");
            this.table.Add(this.labelName);
            Gtk.Table.TableChild w34 = ((Gtk.Table.TableChild)(this.table[this.labelName]));
            w34.XOptions = ((Gtk.AttachOptions)(4));
            w34.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelPassword = new Gtk.Label();
            this.labelPassword.Name = "labelPassword";
            this.labelPassword.Xalign = 0F;
            this.labelPassword.LabelProp = AddinCatalog.GetString("Password:");
            this.table.Add(this.labelPassword);
            Gtk.Table.TableChild w35 = ((Gtk.Table.TableChild)(this.table[this.labelPassword]));
            w35.TopAttach = ((uint)(4));
            w35.BottomAttach = ((uint)(5));
            w35.XOptions = ((Gtk.AttachOptions)(4));
            w35.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelPort = new Gtk.Label();
            this.labelPort.Name = "labelPort";
            this.labelPort.Xalign = 0F;
            this.labelPort.LabelProp = AddinCatalog.GetString("Port:");
            this.table.Add(this.labelPort);
            Gtk.Table.TableChild w36 = ((Gtk.Table.TableChild)(this.table[this.labelPort]));
            w36.TopAttach = ((uint)(2));
            w36.BottomAttach = ((uint)(3));
            w36.XOptions = ((Gtk.AttachOptions)(4));
            w36.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelServer = new Gtk.Label();
            this.labelServer.Name = "labelServer";
            this.labelServer.Xalign = 0F;
            this.labelServer.LabelProp = AddinCatalog.GetString("Server:");
            this.table.Add(this.labelServer);
            Gtk.Table.TableChild w37 = ((Gtk.Table.TableChild)(this.table[this.labelServer]));
            w37.TopAttach = ((uint)(1));
            w37.BottomAttach = ((uint)(2));
            w37.XOptions = ((Gtk.AttachOptions)(4));
            w37.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelTest = new Gtk.Label();
            this.labelTest.Name = "labelTest";
            this.labelTest.Xalign = 0F;
            this.labelTest.Wrap = true;
            this.table.Add(this.labelTest);
            Gtk.Table.TableChild w38 = ((Gtk.Table.TableChild)(this.table[this.labelTest]));
            w38.TopAttach = ((uint)(8));
            w38.BottomAttach = ((uint)(9));
            w38.LeftAttach = ((uint)(1));
            w38.RightAttach = ((uint)(2));
            w38.XOptions = ((Gtk.AttachOptions)(4));
            w38.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.labelUsername = new Gtk.Label();
            this.labelUsername.Name = "labelUsername";
            this.labelUsername.Xalign = 0F;
            this.labelUsername.LabelProp = AddinCatalog.GetString("Username:");
            this.table.Add(this.labelUsername);
            Gtk.Table.TableChild w39 = ((Gtk.Table.TableChild)(this.table[this.labelUsername]));
            w39.TopAttach = ((uint)(3));
            w39.BottomAttach = ((uint)(4));
            w39.XOptions = ((Gtk.AttachOptions)(4));
            w39.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.VBoxMain = new Gtk.VBox();
            this.VBoxMain.Name = "VBoxMain";
            this.VBoxMain.Spacing = 6;
            // Container child VBoxMain.Gtk.Box+BoxChild
            this.labelMessage = new Gtk.Label();
            this.labelMessage.Name = "labelMessage";
            this.labelMessage.UseMarkup = true;
            this.VBoxMain.Add(this.labelMessage);
            Gtk.Box.BoxChild w40 = ((Gtk.Box.BoxChild)(this.VBoxMain[this.labelMessage]));
            w40.Position = 0;
            w40.Fill = false;
            this.table.Add(this.VBoxMain);
            Gtk.Table.TableChild w41 = ((Gtk.Table.TableChild)(this.table[this.VBoxMain]));
            w41.TopAttach = ((uint)(9));
            w41.BottomAttach = ((uint)(10));
            w41.RightAttach = ((uint)(2));
            w41.XOptions = ((Gtk.AttachOptions)(4));
            this.Add(this.table);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.entryPassword.Changed += new System.EventHandler(this.PasswordChanged);
            this.buttonRefresh.Clicked += new System.EventHandler(this.RefreshClicked);
            this.buttonOpen.Clicked += new System.EventHandler(this.OpenClicked);
            this.spinPort.Changed += new System.EventHandler(this.PortChanged);
            this.checkDefaultPort.Toggled += new System.EventHandler(this.OnCheckDefaultPortToggled);
            this.spinMinPoolSize.Changed += new System.EventHandler(this.MinPoolSizeChanged);
            this.spinMaxPoolSize.Changed += new System.EventHandler(this.MaxPoolSizeChanged);
            this.entryUsername.Changed += new System.EventHandler(this.UsernameChanged);
            this.entryServer.Changed += new System.EventHandler(this.ServerChanged);
            this.entryName.Changed += new System.EventHandler(this.NameChanged);
            this.checkIntegratedSecurity.Toggled += new System.EventHandler(this.OnCheckIntegratedSecurityToggled);
            this.buttonTest.Clicked += new System.EventHandler(this.TestClicked);
        }
    }
}
