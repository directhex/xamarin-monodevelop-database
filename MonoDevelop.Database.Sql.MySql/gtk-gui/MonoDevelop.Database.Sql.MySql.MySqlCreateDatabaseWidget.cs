// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Database.Sql.MySql {
    
    
    public partial class MySqlCreateDatabaseWidget {
        
        private Gtk.Table table;
        
        private Gtk.ComboBoxEntry comboCharset;
        
        private Gtk.ComboBoxEntry comboCollation;
        
        private Gtk.Label label2;
        
        private Gtk.Label label3;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Database.Sql.MySql.MySqlCreateDatabaseWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Database.Sql.MySql.MySqlCreateDatabaseWidget";
            // Container child MonoDevelop.Database.Sql.MySql.MySqlCreateDatabaseWidget.Gtk.Container+ContainerChild
            this.table = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
            this.table.Name = "table";
            this.table.RowSpacing = ((uint)(6));
            this.table.ColumnSpacing = ((uint)(6));
            this.table.BorderWidth = ((uint)(6));
            // Container child table.Gtk.Table+TableChild
            this.comboCharset = Gtk.ComboBoxEntry.NewText();
            this.comboCharset.Name = "comboCharset";
            this.table.Add(this.comboCharset);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table[this.comboCharset]));
            w1.LeftAttach = ((uint)(1));
            w1.RightAttach = ((uint)(2));
            w1.XOptions = ((Gtk.AttachOptions)(4));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.comboCollation = Gtk.ComboBoxEntry.NewText();
            this.comboCollation.Name = "comboCollation";
            this.table.Add(this.comboCollation);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table[this.comboCollation]));
            w2.TopAttach = ((uint)(1));
            w2.BottomAttach = ((uint)(2));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = AddinCatalog.GetString("Character Set:");
            this.table.Add(this.label2);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table[this.label2]));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = AddinCatalog.GetString("Collation:");
            this.table.Add(this.label3);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table[this.label3]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            this.Add(this.table);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
        }
    }
}
